CC = gcc
CFLAGS = -Wall -Wextra -O2 -std=c99 -D_GNU_SOURCE
LDFLAGS = -lpthread

# Source files
SOURCES = src/main.c src/binary.c src/connection.c src/server.c src/telnet_info.c src/util.c
HEADERS = src/headers/includes.h src/headers/binary.h src/headers/connection.h src/headers/server.h src/headers/telnet_info.h src/headers/util.h src/headers/config.h

# Output binary
TARGET = loader

# Default target
all: $(TARGET)

# Compile the loader
$(TARGET): $(SOURCES) $(HEADERS)
	@echo "Compiling loader..."
	$(CC) $(CFLAGS) -o $(TARGET) $(SOURCES) $(LDFLAGS)
	@echo "Loader compiled successfully: $(TARGET)"

# Clean build artifacts
clean:
	@echo "Cleaning build artifacts..."
	rm -f $(TARGET)
	@echo "Clean complete"

# Install loader to system
install: $(TARGET)
	@echo "Installing loader..."
	cp $(TARGET) /usr/local/bin/
	chmod +x /usr/local/bin/$(TARGET)
	@echo "Loader installed to /usr/local/bin/"

# Debug build
debug: CFLAGS += -DDEBUG -g
debug: $(TARGET)

# Release build
release: CFLAGS += -DNDEBUG -O3
release: $(TARGET)

# Show help
help:
	@echo "Available targets:"
	@echo "  all      - Build the loader (default)"
	@echo "  clean    - Remove build artifacts"
	@echo "  install  - Install loader to system"
	@echo "  debug    - Build with debug symbols"
	@echo "  release  - Build optimized release version"
	@echo "  help     - Show this help message"

.PHONY: all clean install debug release help
